name: Build and Deploy

on:
  release:
    types: [published]
  push:
    branches:
      - master

jobs:

  build_and_publish:
    runs-on: [ubuntu-latest]
    env:
      LOGIN: ${{ secrets.DOCKER_LOGIN }}
      NAME: ${{ secrets.DOCKER_NAME }}
    steps:
      - name: Login to docker.io
        run:  echo ${{ secrets.DOCKER_PASS }} | docker login -u ${{ secrets.DOCKER_LOGIN }} --password-stdin
      - uses: actions/checkout@master
      - name: Build image
        run: docker build -t $LOGIN/$NAME:${GITHUB_REF:11} ./client
      - name: Push image to docker.io
        run: docker push $LOGIN/$NAME:${GITHUB_REF:11}

  deploy:
    runs-on: [ubuntu-latest]
    needs: build_and_publish
    steps:
      - name: Install SSH Key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.DEPLOY_SSH_KEY }}
          known_hosts: 'just-a-placeholder-so-we-dont-get-errors'
      - name: Adding Known Hosts
        run: ssh-keyscan -H ${{ secrets.DEPLOY_MACHINE_IP }} >> ~/.ssh/known_hosts

      - name: Add and change docker remote context
        run: docker context create remote --docker "host=ssh://${{ secrets.DEPLOY_USER }}@${{ secrets.DEPLOY_MACHINE_IP }}" &&
          docker context use remote

      - name: Pull newer docker image
        run: docker pull vladdamage/szk-app:master

      - name: Check container exists
        id: check
        run: OUTPUT=$(docker ps -q --filter "name=szk-vue-app") &&
          echo "::set-output name=OUTPUT::$OUTPUT"

      - name: Remove old container
        if: steps.check.outputs.OUTPUT != ''
        run: docker rm -f -v $(echo | docker ps -q --filter "name=szk-vue-app")

      - name: Run new docker container
        run: docker run --rm -d -p 3000:8080 --name szk-vue-app vladdamage/szk-app:master

      - name: Clear unused images
        run: echo y | docker image prune -a