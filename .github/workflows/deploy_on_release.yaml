name: Publish on Docker Hub

on:
  release:
    types: [published]
  push:
    branches:
      - master

jobs:
#  build_and_pub:
#    runs-on: [ubuntu-latest]
#    env:
#      LOGIN: ${{ secrets.DOCKER_LOGIN }}
#      NAME: ${{ secrets.DOCKER_NAME }}
#    steps:
#      - name: Login to docker.io
#        run:  echo ${{ secrets.DOCKER_PASS }} | docker login -u ${{ secrets.DOCKER_LOGIN }} --password-stdin
#      - uses: actions/checkout@master
#      - name: Build image
#        run: docker build -t $LOGIN/$NAME:${GITHUB_REF:11} ./client
#      - name: Push image to docker.io
#        run: docker push $LOGIN/$NAME:${GITHUB_REF:11}

  deploy:
    runs-on: [ubuntu-latest]
    #needs: build_and_pub
    env:
      STOP_OLD_CONTAINER: docker stop $(docker ps -q --filter ancestor=<szk-vue-app> )
      REMOVE_OLD_CONTAINER: docker rm szk-vue-app
      REMOVE_OLD_IMAGE: docker rmi $(docker images | grep 'vladdamage/szk-app')
      RUN_NEW_CONTAINER: docker run -d -p 3000:8080 --name szk-vue-app vladdamage/szk-app:master
    steps:
      - name: Install SSH Key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.DEPLOY_SSH_KEY }}
          known_hosts: 'just-a-placeholder-so-we-dont-get-errors'
      - name: Adding Known Hosts
        run: ssh-keyscan -H ${{ secrets.DEPLOY_MACHINE_IP }} >> ~/.ssh/known_hosts

      - name: Stop old container
        run: ssh -tt ${{ secrets.DEPLOY_USER }}@${{ secrets.DEPLOY_MACHINE_IP }} echo ${{ secrets.DEPLOY_SUDO_PASS }} | sudo -S $STOP_OLD_CONTAINER

      - name: Remove old container
        run: ssh -tt ${{ secrets.DEPLOY_USER }}@${{ secrets.DEPLOY_MACHINE_IP }} echo ${{ secrets.DEPLOY_SUDO_PASS }} | sudo -S $REMOVE_OLD_CONTAINER

      - name: Remove old image
        run: ssh -tt ${{ secrets.DEPLOY_USER }}@${{ secrets.DEPLOY_MACHINE_IP }} echo ${{ secrets.DEPLOY_SUDO_PASS }} | sudo -S $REMOVE_OLD_IMAGE

      - name: Run new container
        run: ssh -tt ${{ secrets.DEPLOY_USER }}@${{ secrets.DEPLOY_MACHINE_IP }} echo ${{ secrets.DEPLOY_SUDO_PASS }} | sudo -S $RUN_NEW_CONTAINER